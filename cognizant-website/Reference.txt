Browser
---
  HTML Renderer  (HTML)
  CSS Parser  (CSS)
  JS Engine  (JS)

  Browser Families
  --
    Webkit 
      Safari 
      
    Mozilla 
      Firefox

    Chromium (Webkit + Mozilla + extra )
      Chrome 
      Opera
      Edge
      Brave
    

HTML 
---
  * Structural Layer 
  * Standard 

  Layout
  ---
    1. Fixed Layout 
    2. Fluid Layout

  HTML Elements
  ---
    1. Block Level Elements 
        Examples: header, main, footer, h1-h6, div, section
    2. Inline Elements
        Examples: a, img, button, span, input, textarea


CSS 
---
  * Presentation Layer 
  * Standard





JS 
--
  * Interaction Layer 

---

Naming Conventions 
---

  Casing Types
  ---
    1. PascalCase   
        * recommended for object oriented classes in JavaScript and TypeScript  
        * also recommended for Interface in TypeScript

        examples: 
          class CarDetails{

          }

          interface User{

          }
      
    2. camelCase 
        * recommended for variables, const, functions, methods in JS and TS 
        * recommended for id's of html elements 

        Examples: 
          var myCar = 'BMW';
          function getCarInfo(){
            
          }

    3. kebab-case 
        * recommended for css classes and urls 
        * recommended for file names, folder names, assets in front end projects
        * okay for id's of html elements if architect accepts 
        
        Examples:
          btn-primary 
          slideshow-container

    4. snake_case
        * never ever use this.
        * okay for const in JS and TS if architect accepts 
        Example: 
          const MAX_STUDENTS_PER_CLASS = 30;


-----

CSS 
---
  * Cascading Style Sheet 
  * Presentation Layer 

  CSS Types 
  1. Inline CSS 
      * Coded directly in the html element 
      * coded with style attribute 

      Disadv
      ---
        1. Styles can't be used in other elements
        2. Styles can't be used in other pages
        3. Logical separation of layers can't be followed

  2. Internal CSS 
      * coded inside the html file itself 
      * coded in between style tag -- inside head tag 
          <style> 
            /* Internal Styles */
            selector {
              /* style definitions */
              property: value;
            }
          <style>

      Disadv
      ---
        1. Styles can't be used in other pages
        2. Logical separation of layers can't be followed


  3. External CSS 
      * will be coded in separate css file with .css being file extension 
      * the file should be linked from html file

      --


  CSS Syntax
  ---
    selector {
      /* style definitions */
      property: value;
    }

  Selectors
  ----
    1. Element / Tag Selector 
    2. ID Selector 
    3. Class Selector 
    4. Attribute Selector [TODO]
    5. Pseudo Selector [TODO]
    6. Universal Selector
    